<?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ltc.dao.BillMapper">
<resultMap id="BaseResultMap" type="com.ltc.bean.Bill">
  <id column="id" jdbcType="BIGINT" property="id" />
  <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
  <result column="doctor_id" jdbcType="INTEGER" property="doctorId" />
  <result column="medicine" jdbcType="VARCHAR" property="medicine" />
  <result column="hospitalization" jdbcType="VARCHAR" property="hospitalization" />
  <result column="cost" jdbcType="DOUBLE" property="cost" />
  <result column="remark" jdbcType="VARCHAR" property="remark" />
  <result column="date" jdbcType="DATE" property="date" />
</resultMap>
<resultMap id="WithDoctorResultMap" type="com.ltc.bean.Bill">
  <id column="id" jdbcType="BIGINT" property="id" />
  <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
  <result column="doctor_id" jdbcType="INTEGER" property="doctorId" />
  <result column="medicine" jdbcType="VARCHAR" property="medicine" />
  <result column="hospitalization" jdbcType="VARCHAR" property="hospitalization" />
  <result column="cost" jdbcType="DOUBLE" property="cost" />
  <result column="remark" jdbcType="VARCHAR" property="remark" />
  <result column="date" jdbcType="DATE" property="date" />
  <!-- 指定联合查询出的医生字段封装 -->
  <association property="doctor" javaType="com.ltc.bean.Doctor">
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="duty" jdbcType="VARCHAR" property="duty" />
    <result column="positional_title" jdbcType="VARCHAR" property="positionalTitle" />
    <result column="clinic_time" jdbcType="VARCHAR" property="clinicTime" />
    <result column="doctor_date" jdbcType="DATE" property="doctorDate" />
  </association>
</resultMap>
<sql id="Example_Where_Clause">
  <where>
    <foreach collection="oredCriteria" item="criteria" separator="or">
      <if test="criteria.valid">
        <trim prefix="(" prefixOverrides="and" suffix=")">
          <foreach collection="criteria.criteria" item="criterion">
            <choose>
              <when test="criterion.noValue">
                and ${criterion.condition}
              </when>
              <when test="criterion.singleValue">
                and ${criterion.condition} #{criterion.value}
              </when>
              <when test="criterion.betweenValue">
                and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
              </when>
              <when test="criterion.listValue">
                and ${criterion.condition}
                <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                  #{listItem}
                </foreach>
              </when>
            </choose>
          </foreach>
        </trim>
      </if>
    </foreach>
  </where>
</sql>
<sql id="Update_By_Example_Where_Clause">
  <where>
    <foreach collection="example.oredCriteria" item="criteria" separator="or">
      <if test="criteria.valid">
        <trim prefix="(" prefixOverrides="and" suffix=")">
          <foreach collection="criteria.criteria" item="criterion">
            <choose>
              <when test="criterion.noValue">
                and ${criterion.condition}
              </when>
              <when test="criterion.singleValue">
                and ${criterion.condition} #{criterion.value}
              </when>
              <when test="criterion.betweenValue">
                and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
              </when>
              <when test="criterion.listValue">
                and ${criterion.condition}
                <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                  #{listItem}
                </foreach>
              </when>
            </choose>
          </foreach>
        </trim>
      </if>
    </foreach>
  </where>
</sql>

<!-- 查询预约记录时医生信息 一起显示 -->
<sql id="WithDoctor_Column_List">
    e.id, e.customer_name, e.doctor_id, e.medicine, e.hospitalization, e.cost, e.remark, e.date, d.id, d.name, d.duty, d.positional_title, clinic_time, doctor_date
  </sql>
<select id="selectByExampleWithDoctor" parameterType="com.ltc.bean.BillExample" resultMap="WithDoctorResultMap">
  select
  <if test="distinct">
    distinct
  </if>
  <include refid="WithDoctor_Column_List" />
  from bill e
  left join doctor d on e.`doctor_id` = d.`id`
  <if test="_parameter != null">
    <include refid="Example_Where_Clause" />
  </if>
  <if test="orderByClause != null">
    order by ${orderByClause}
  </if>
</select>
<select id="selectByPrimaryKeyWithDoctor" parameterType="java.lang.Long" resultMap="WithDoctorResultMap">
  select
  <include refid="WithDoctor_Column_List" />
  from bill e
  left join doctor d on e.`doctor_id` = d.`id`
  where e.id = #{id,jdbcType=BIGINT}
</select>


<sql id="Base_Column_List">
    id, customer_name, doctor_id, medicine, hospitalization, cost, remark, date
  </sql>
<select id="selectByExample" parameterType="com.ltc.bean.BillExample" resultMap="BaseResultMap">
  select
  <if test="distinct">
    distinct
  </if>
  <include refid="Base_Column_List" />
  from bill
  <if test="_parameter != null">
    <include refid="Example_Where_Clause" />
  </if>
  <if test="orderByClause != null">
    order by ${orderByClause}
  </if>
</select>
<select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
  select
  <include refid="Base_Column_List" />
  from bill
  where id = #{id,jdbcType=BIGINT}
</select>
<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bill
    where id = #{id,jdbcType=BIGINT}
  </delete>
<delete id="deleteByExample" parameterType="com.ltc.bean.BillExample">
  delete from bill
  <if test="_parameter != null">
    <include refid="Example_Where_Clause" />
  </if>
</delete>
<insert id="insert" parameterType="com.ltc.bean.Bill">
    insert into bill (id, customer_name, doctor_id,
      medicine, hospitalization, cost,
      remark, date)
    values (#{id,jdbcType=BIGINT}, #{customerName,jdbcType=VARCHAR}, #{doctorId,jdbcType=INTEGER},
      #{medicine,jdbcType=VARCHAR}, #{hospitalization,jdbcType=VARCHAR}, #{cost,jdbcType=DOUBLE},
      #{remark,jdbcType=VARCHAR}, #{date,jdbcType=DATE})
  </insert>
<insert id="insertSelective" parameterType="com.ltc.bean.Bill">
  insert into bill
  <trim prefix="(" suffix=")" suffixOverrides=",">
    <if test="id != null">
      id,
    </if>
    <if test="customerName != null">
      customer_name,
    </if>
    <if test="doctorId != null">
      doctor_id,
    </if>
    <if test="medicine != null">
      medicine,
    </if>
    <if test="hospitalization != null">
      hospitalization,
    </if>
    <if test="cost != null">
      cost,
    </if>
    <if test="remark != null">
      remark,
    </if>
    <if test="date != null">
      date,
    </if>
  </trim>
  <trim prefix="values (" suffix=")" suffixOverrides=",">
    <if test="id != null">
      #{id,jdbcType=BIGINT},
    </if>
    <if test="customerName != null">
      #{customerName,jdbcType=VARCHAR},
    </if>
    <if test="doctorId != null">
      #{doctorId,jdbcType=INTEGER},
    </if>
    <if test="medicine != null">
      #{medicine,jdbcType=VARCHAR},
    </if>
    <if test="hospitalization != null">
      #{hospitalization,jdbcType=VARCHAR},
    </if>
    <if test="cost != null">
      #{cost,jdbcType=DOUBLE},
    </if>
    <if test="remark != null">
      #{remark,jdbcType=VARCHAR},
    </if>
    <if test="date != null">
      #{date,jdbcType=DATE},
    </if>
  </trim>
</insert>
<select id="countByExample" parameterType="com.ltc.bean.BillExample" resultType="java.lang.Long">
  select count(*) from bill
  <if test="_parameter != null">
    <include refid="Example_Where_Clause" />
  </if>
</select>
<update id="updateByExampleSelective" parameterType="map">
  update bill
  <set>
    <if test="record.id != null">
      id = #{record.id,jdbcType=BIGINT},
    </if>
    <if test="record.customerName != null">
      customer_name = #{record.customerName,jdbcType=VARCHAR},
    </if>
    <if test="record.doctorId != null">
      doctor_id = #{record.doctorId,jdbcType=INTEGER},
    </if>
    <if test="record.medicine != null">
      medicine = #{record.medicine,jdbcType=VARCHAR},
    </if>
    <if test="record.hospitalization != null">
      hospitalization = #{record.hospitalization,jdbcType=VARCHAR},
    </if>
    <if test="record.cost != null">
      cost = #{record.cost,jdbcType=DOUBLE},
    </if>
    <if test="record.remark != null">
      remark = #{record.remark,jdbcType=VARCHAR},
    </if>
    <if test="record.date != null">
      date = #{record.date,jdbcType=DATE},
    </if>
  </set>
  <if test="_parameter != null">
    <include refid="Update_By_Example_Where_Clause" />
  </if>
</update>
<update id="updateByExample" parameterType="map">
  update bill
  set id = #{record.id,jdbcType=BIGINT},
  customer_name = #{record.customerName,jdbcType=VARCHAR},
  doctor_id = #{record.doctorId,jdbcType=INTEGER},
  medicine = #{record.medicine,jdbcType=VARCHAR},
  hospitalization = #{record.hospitalization,jdbcType=VARCHAR},
  cost = #{record.cost,jdbcType=DOUBLE},
  remark = #{record.remark,jdbcType=VARCHAR},
  date = #{record.date,jdbcType=DATE}
  <if test="_parameter != null">
    <include refid="Update_By_Example_Where_Clause" />
  </if>
</update>
<update id="updateByPrimaryKeySelective" parameterType="com.ltc.bean.Bill">
  update bill
  <set>
    <if test="customerName != null">
      customer_name = #{customerName,jdbcType=VARCHAR},
    </if>
    <if test="doctorId != null">
      doctor_id = #{doctorId,jdbcType=INTEGER},
    </if>
    <if test="medicine != null">
      medicine = #{medicine,jdbcType=VARCHAR},
    </if>
    <if test="hospitalization != null">
      hospitalization = #{hospitalization,jdbcType=VARCHAR},
    </if>
    <if test="cost != null">
      cost = #{cost,jdbcType=DOUBLE},
    </if>
    <if test="remark != null">
      remark = #{remark,jdbcType=VARCHAR},
    </if>
    <if test="date != null">
      date = #{date,jdbcType=DATE},
    </if>
  </set>
  where id = #{id,jdbcType=BIGINT}
</update>
<update id="updateByPrimaryKey" parameterType="com.ltc.bean.Bill">
    update bill
    set customer_name = #{customerName,jdbcType=VARCHAR},
      doctor_id = #{doctorId,jdbcType=INTEGER},
      medicine = #{medicine,jdbcType=VARCHAR},
      hospitalization = #{hospitalization,jdbcType=VARCHAR},
      cost = #{cost,jdbcType=DOUBLE},
      remark = #{remark,jdbcType=VARCHAR},
      date = #{date,jdbcType=DATE}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>